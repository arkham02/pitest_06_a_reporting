<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward applied with enough points</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward applied with enough points</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>2</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward not applied with enough points because gift product not in order</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>3</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward not applied with enough points because gift product not in order</killingTest><description>mutated return of Object value for com/wiredbraincoffee/reward/RewardByGiftService::applyReward to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>getGiftProductId</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward applied with enough points</killingTest><description>replaced return of long value with value + 1 for com/wiredbraincoffee/reward/RewardByGiftService::getGiftProductId</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>lambda$applyReward$0</mutatedMethod><methodDescription>(Lcom/wiredbraincoffee/product/Product;)Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward not applied with enough points because gift product not in order</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>lambda$applyReward$0</mutatedMethod><methodDescription>(Lcom/wiredbraincoffee/product/Product;)Z</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>11</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward not applied with enough points because gift product not in order</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>setGiftProductId</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>5</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Exception is thrown when invalid product ID is set</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByGiftService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByGiftService</mutatedClass><mutatedMethod>setGiftProductId</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>5</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward not applied with enough points because gift product not in order</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByConversionService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByConversionService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RewardByConversionService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByConversionService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>2</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total equals amount reward should not be applied</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByConversionService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByConversionService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByConversionService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByConversionService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>2</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByConversionService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByConversionService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>3</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>mutated return of Object value for com/wiredbraincoffee/reward/RewardByConversionService::applyReward to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RewardByConversionService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByConversionService</mutatedClass><mutatedMethod>getAmount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total equals amount reward should not be applied</killingTest><description>replaced return of double value with -(x + 1) for com/wiredbraincoffee/reward/RewardByConversionService::getAmount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RewardByConversionService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByConversionService</mutatedClass><mutatedMethod>setAmount</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>5</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.Exception is thrown when invalid amount is set</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByConversionService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByConversionService</mutatedClass><mutatedMethod>setAmount</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>5</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RewardByDiscountService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByDiscountService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.When customer has enough points reward should be applied</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByDiscountService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByDiscountService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>2</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.When customer has enough points reward should be applied</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByDiscountService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByDiscountService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.When customer has zero points no reward should be applied</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByDiscountService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByDiscountService</mutatedClass><mutatedMethod>applyReward</mutatedMethod><methodDescription>(Ljava/util/List;J)Lcom/wiredbraincoffee/reward/RewardInformation;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>2</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.When customer has zero points no reward should be applied</killingTest><description>mutated return of Object value for com/wiredbraincoffee/reward/RewardByDiscountService::applyReward to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByDiscountService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByDiscountService</mutatedClass><mutatedMethod>getPercentage</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.When customer has enough points reward should be applied</killingTest><description>replaced return of double value with -(x + 1) for com/wiredbraincoffee/reward/RewardByDiscountService::getPercentage</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RewardByDiscountService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByDiscountService</mutatedClass><mutatedMethod>setPercentage</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>4</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.Exception is thrown when invalid percentage is set</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardByDiscountService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardByDiscountService</mutatedClass><mutatedMethod>setPercentage</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>4</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.When customer has zero points no reward should be applied</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardInformation.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardInformation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JD)V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>removed call to com/wiredbraincoffee/reward/RewardInformation::setPointsRedeemed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardInformation.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardInformation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JD)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>removed call to com/wiredbraincoffee/reward/RewardInformation::setDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardInformation.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardInformation</mutatedClass><mutatedMethod>getDiscount</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.When customer has zero points no reward should be applied</killingTest><description>replaced return of double value with -(x + 1) for com/wiredbraincoffee/reward/RewardInformation::getDiscount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardInformation.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardInformation</mutatedClass><mutatedMethod>getPointsRedeemed</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>com.wiredbraincoffee.reward.test.RewardByDiscountServiceTest.When customer has zero points no reward should be applied</killingTest><description>replaced return of long value with value + 1 for com/wiredbraincoffee/reward/RewardInformation::getPointsRedeemed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardService</mutatedClass><mutatedMethod>calculateTotal</mutatedMethod><methodDescription>(Ljava/util/List;)D</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RewardService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardService</mutatedClass><mutatedMethod>calculateTotal</mutatedMethod><methodDescription>(Ljava/util/List;)D</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>2</block><killingTest>com.wiredbraincoffee.reward.test.RewardByConversionServiceTest.When enough points and order total is greater than amount reward should be applied</killingTest><description>replaced return of double value with -(x + 1) for com/wiredbraincoffee/reward/RewardService::calculateTotal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>RewardService.java</sourceFile><mutatedClass>com.wiredbraincoffee.reward.RewardService</mutatedClass><mutatedMethod>getNeededPoints</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>com.wiredbraincoffee.reward.test.RewardByGiftServiceTest.Reward applied with enough points</killingTest><description>replaced return of long value with value + 1 for com/wiredbraincoffee/reward/RewardService::getNeededPoints</description></mutation>
</mutations>
